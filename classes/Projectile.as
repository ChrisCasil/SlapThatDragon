package {	import flash.display.MovieClip;	import flash.utils.Timer;	import flash.events.TimerEvent;	import flash.display.Stage;	import flash.media.SoundChannel;	public class Projectile extends MovieClip	{		public var realX:Number;		public var realY:Number;		public var lastX:Number;		public var lastY:Number;		public var angle:Number;		public var speed:Number;		public var gameTimer:Timer;		public var dragon:Dragon;		public var hand:Hand;		public var damage:int;		public var stunDuration:int;		//sound stuff		public var arrowHit:ArrowHit = new ArrowHit();		public var projChannel:SoundChannel;		public function Projectile(gameTimer:Timer, hand:Hand, dragon:Dragon, posX:int, posY:int, theAngle:Number, theSpeed:Number)		{			x = posX;			y = posY;			realX = posX;			realY = posY;			lastX = posX;			lastY = posY;			speed = theSpeed;			angle = theAngle;			realX +=  speed * Math.cos(angle);			realY +=  speed * Math.sin(angle);			this.hand = hand;			this.dragon = dragon;			damage = 50;			stunDuration = 25;			gameTimer.addEventListener(TimerEvent.TIMER, onTick);			this.gameTimer = gameTimer;		}		protected function onTick(e:TimerEvent):void		{			angle = Calculate.doAngle(realX,lastX,realY + Calculate.GRAV,lastY);			speed = Calculate.doDistance(realX,lastX,realY + Calculate.GRAV,lastY);			lastX = realX;			lastY = realY;			realX +=  speed * Math.cos(angle);			realY +=  speed * Math.sin(angle);			rotation = angle * 180 / Math.PI;			x = realX;			y = realY;			doHitOnDragon();			doHitOnHand();		}		protected function doHitOnDragon()		{			var distToDrag:Number = Calculate.doDistance(realX,dragon.realX,realY,dragon.realY);			if (realX < 0 || realX > 1280 || realY < 0 || realY > 720)			{				if (parent)				{					gameTimer.removeEventListener(TimerEvent.TIMER,onTick);					parent.removeChild(this);				}			}			if (distToDrag < Dragon.HEAD_RADIUS)			{				if (parent)				{					dragon.dragonHealth -=  damage;					playSound();					gameTimer.removeEventListener(TimerEvent.TIMER,onTick);					parent.removeChild(this);				}			}		}		protected function doHitOnHand()		{		}		protected function playSound()		{			projChannel = arrowHit.play();		}	}}