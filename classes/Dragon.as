package {	import flash.display.MovieClip;	import flash.events.TimerEvent;	import flash.utils.Timer;	public class Dragon extends MovieClip	{		public var dragonHealth:Number = 100;		public var dragonSkill:Number = 100;		public var shownHealth:int;		public var shownSkill:int;		public var maxHealth:int = 100;		public var maxSkill:int = 100;		public var healthRegen:int = 2;		public var skillRegen:int = 2;		public var dragonHeadPos:int;		public var animationCount1:int;		public var animationCount2:int;		public var superchargeCount:int;				public var gameTimer:Timer;		public var realX;		public var realY;		public static const HEAD_RADIUS:Number = 50;		public static const HEAD_X:Number = -25;		public var hand:Hand;		public function Dragon(gameTimer:Timer,hand:Hand,posX:int,posY:int)		{			this.hand = hand;			x = posX;			y = posY;			realX = x;			realY = y;			gameTimer.addEventListener(TimerEvent.TIMER,onTick);			this.gameTimer = gameTimer;		}		public function onTick(e:TimerEvent)		{			checkHand();			animateDragon();			updateHealth();			updateSkill();			superChargeRegen();		}		public function checkHand()		{			var zoneVar:int = stage.stageWidth / 5;			var theX:int = hand.realX - stage.stageWidth / 2;			if (theX < - zoneVar)			{				dragonHeadPos = 1;			}			else if (theX >= -zoneVar && theX <= zoneVar)			{				dragonHeadPos = 2;			}			else if (theX > zoneVar)			{				dragonHeadPos = 3;			}		}		public function animateDragon():void		{			if (animationCount1 == 0 && animationCount2 == 0)			{				gotoAndStop(dragonHeadPos);			}			else if (animationCount1 > 0)			{				if (animationCount1 < 20)				{					gotoAndStop(dragonHeadPos + 3);					animationCount1++;				}				else				{					animationCount1 = 0;				}			}			else if (animationCount2 > 0)			{				if (animationCount2 < 30)				{					gotoAndStop(dragonHeadPos + 6);					animationCount2++;				}				else				{					animationCount2 = 0;				}			}		}		public function updateHealth():void		{			if (gameTimer.currentCount % int(100 / healthRegen) == 0)			{				dragonHealth++;			}			if ((dragonHealth > maxHealth))			{				dragonHealth = maxHealth;			}			if (((shownHealth < dragonHealth) && shownHealth < maxHealth))			{				shownHealth++;			}			else if (((shownHealth > dragonHealth) && shownHealth > 0))			{				shownHealth--;			}		}		public function updateSkill():void		{			if (gameTimer.currentCount % int(30 / skillRegen) == 0)			{				dragonSkill++;			}			if ((dragonSkill > maxSkill))			{				dragonSkill = maxSkill;			}			if (((shownSkill < dragonSkill) && shownSkill < maxSkill))			{				shownSkill++;			}			else if (((shownSkill > dragonSkill) && shownSkill > 0))			{				shownSkill--;			}		}				public function superChargeRegen():void		{			if(superchargeCount > 0)			{				superchargeCount--;				dragonSkill += 1.2;			}		}	}}